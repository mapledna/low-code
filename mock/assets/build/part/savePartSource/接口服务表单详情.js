const parameter = { partVersionId: '1364872795959754753', partSource: '{"fields":[{"label":"详情信息","layout":"formDetail","tagIcon":"formDetail","type":"default","justify":"start","align":"top","layoutTree":true,"document":"https://element.eleme.cn/#/zh-CN/component/container","span":24,"errValue":"（无数据）","relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"dataSource":{"type":"url","categoryId":"1257904396855046146","listId":"1251047719744778242","flowId":null,"staticData":"","optionParams":{"row100.initData":{"sqlId":"1251047719744778242","parameters":{"id":"1274936535720648709"}}},"paramType":"","param_fnBody":"","param_json":"","microserviceId":null},"dataType":"dynamic","searchData":[{"is_required":1,"valid_rule":null,"param_max":null,"paramvalue":null,"label":"接口ID","param_min":null,"value":"id","widgetCode":2}],"initDataId":"","children":[{"label":"标题文字","tag":"formItemText","tagIcon":"title","layout":"colFormItem","span":24,"modelValue":"详情信息","showLabel":false,"labelWidth":null,"style":{"width":"100%","margin":0,"display":"block","color":"","fontSize":"16px","fontWeight":"bold","textAlign":"left","background":""},"dataSource":{"type":"url","categoryId":"","listId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"changeTag":true,"formId":101,"renderKey":101,"vModel":"field101"},{"label":"分割线","tag":"el-divider","layout":"colFormItem","tagIcon":"divider","content":"","showLabel":false,"labelWidth":null,"content-position":"left","formId":102,"renderKey":102,"span":24,"vModel":"field102"},{"label":"行容器","layout":"rowFormItem","tagIcon":"row","gutter":0,"type":"default","justify":"start","align":"top","layoutTree":true,"document":"https://element.eleme.cn/#/zh-CN/component/layout","children":[{"label":"接口ID","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"id","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":104,"renderKey":104,"_parentFieldId":"row100"},{"label":"产品ID","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"product_id","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":105,"renderKey":105,"_parentFieldId":"row100"},{"label":"接口名称","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"interface_name","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":106,"renderKey":106,"_parentFieldId":"row100"},{"label":"接口代码","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"interface_code","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":107,"renderKey":107,"_parentFieldId":"row100"},{"label":"媒体类型1=json2=form","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"media_type","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":108,"renderKey":108,"_parentFieldId":"row100"},{"label":"请求方式 1=get2=post3=put4=head5=delete","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"request_mode","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":109,"renderKey":109,"_parentFieldId":"row100"},{"label":"返回值类型 1=json2=字符串","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"return_type","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":110,"renderKey":110,"_parentFieldId":"row100"},{"label":"接口地址","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"interface_url","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":111,"renderKey":111,"_parentFieldId":"row100"},{"label":"接口描述","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"description","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":112,"renderKey":112,"_parentFieldId":"row100"},{"label":"审核人","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"audit_user","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":113,"renderKey":113,"_parentFieldId":"row100"},{"label":"审核状态 0=待审批1=审批通过2.审批拒绝3.已过期","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"audit_status","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":114,"renderKey":114,"_parentFieldId":"row100"},{"label":"审批时间","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"audit_date","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":115,"renderKey":115,"_parentFieldId":"row100"},{"label":"审核意见","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"audit_opinion","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":116,"renderKey":116,"_parentFieldId":"row100"},{"label":"过期人","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"expired_user","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":117,"renderKey":117,"_parentFieldId":"row100"},{"label":"过期原因","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"expired_reason","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":118,"renderKey":118,"_parentFieldId":"row100"},{"label":"过期时间","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"expired_date","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":119,"renderKey":119,"_parentFieldId":"row100"},{"label":"创建人","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"created_by","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":120,"renderKey":120,"_parentFieldId":"row100"},{"label":"创建时间","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"created_date","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":121,"renderKey":121,"_parentFieldId":"row100"},{"label":"更新人","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"updated_by","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":122,"renderKey":122,"_parentFieldId":"row100"},{"label":"更新时间","tag":"formItemText","layout":"colFormItem","tagIcon":"formItemText","span":24,"showLabel":true,"labelWidth":null,"labelKey":"label","valueKey":"id","childrenKey":"children","style":{"width":"200px"},"modelValue":"","options":[],"dataSource":{"categoryId":"","flowId":"","staticData":"","optionParams":{},"paramType":"","param_fnBody":"","param_json":""},"relate":{"passiveOptions":[],"activeId":"","activeOptions":[],"fieldOptions":[]},"searchData":[],"changeTag":true,"invisible":false,"readonly":true,"vModel":"updated_date","required":false,"errValue":"（无数据）","width":"200px","widgetCode":"","parentKey":"pid","nodeKey":"id","formId":123,"renderKey":123,"_parentFieldId":"row100"}],"span":24,"formId":103,"renderKey":103,"componentName":"row103"}],"formId":100,"renderKey":100,"componentName":"row100","gutter":15,"initDataOptions":[{"label":"接口ID","value":"id","inputVal":"1274936535720648709"}],"formDetailData":{"id":null,"product_id":null,"interface_name":null,"interface_code":null,"media_type":null,"request_mode":null,"return_type":null,"interface_url":null,"description":null,"audit_user":null,"audit_status":null,"audit_date":null,"audit_opinion":null,"expired_user":null,"expired_reason":null,"expired_date":null,"created_by":null,"created_date":null,"updated_by":null,"updated_date":null}}],"formRef":"elForm","formModel":"formData","size":"medium","labelPosition":"right","labelWidth":120,"formRules":"rules","gutter":15,"disabled":false,"span":24,"formBtns":false,"pageJs":" ","hookFnType":"","hookFn":"","idGlobal":124}', partHtml: "<template>\n  <div>\n    <el-form ref=\"elForm\" :model=\"formData\" :rules=\"rules\" size=\"medium\" label-width=\"120px\"\n      v-loading=\"isLockPage\" @submit.native.prevent>\n      <el-col :span=\"24\" class=\" \">\n        <el-row justify=\"start\" align=\"top\" :gutter=\"15\">\n          <el-col :span=\"24\" class=\" \">\n            <el-form-item label-width=\"0\" prop=\"field101\">\n              <FormItemText :modelValue=\"formData.field101\"\n                style=\"width:100%;margin:0;display:block;color:;fontSize:16px;fontWeight:bold;textAlign:left;background:;\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\" class=\" \">\n            <el-form-item label-width=\"0\" prop=\"field102\">\n              <el-divider content-position=\"left\"></el-divider>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\" class=\" \">\n            <el-row :gutter=\"0\">\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"接口ID\" prop=\"id\">\n                  <FormItemText :modelValue=\"formDetailData_row100.id\" :options=\"idOptions\"\n                    label-key=\"label\" value-key=\"id\" node-key=\"id\" parent-key=\"pid\" children-key=\"children\"\n                    errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"产品ID\" prop=\"product_id\">\n                  <FormItemText :modelValue=\"formDetailData_row100.product_id\" :options=\"product_idOptions\"\n                    label-key=\"label\" value-key=\"id\" node-key=\"id\" parent-key=\"pid\" children-key=\"children\"\n                    errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"接口名称\" prop=\"interface_name\">\n                  <FormItemText :modelValue=\"formDetailData_row100.interface_name\"\n                    :options=\"interface_nameOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"接口代码\" prop=\"interface_code\">\n                  <FormItemText :modelValue=\"formDetailData_row100.interface_code\"\n                    :options=\"interface_codeOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"媒体类型1=json2=form\" prop=\"media_type\">\n                  <FormItemText :modelValue=\"formDetailData_row100.media_type\" :options=\"media_typeOptions\"\n                    label-key=\"label\" value-key=\"id\" node-key=\"id\" parent-key=\"pid\" children-key=\"children\"\n                    errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"请求方式 1=get2=post3=put4=head5=delete\" prop=\"request_mode\">\n                  <FormItemText :modelValue=\"formDetailData_row100.request_mode\"\n                    :options=\"request_modeOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"返回值类型 1=json2=字符串\" prop=\"return_type\">\n                  <FormItemText :modelValue=\"formDetailData_row100.return_type\"\n                    :options=\"return_typeOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"接口地址\" prop=\"interface_url\">\n                  <FormItemText :modelValue=\"formDetailData_row100.interface_url\"\n                    :options=\"interface_urlOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"接口描述\" prop=\"description\">\n                  <FormItemText :modelValue=\"formDetailData_row100.description\"\n                    :options=\"descriptionOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"审核人\" prop=\"audit_user\">\n                  <FormItemText :modelValue=\"formDetailData_row100.audit_user\" :options=\"audit_userOptions\"\n                    label-key=\"label\" value-key=\"id\" node-key=\"id\" parent-key=\"pid\" children-key=\"children\"\n                    errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"审核状态 0=待审批1=审批通过2.审批拒绝3.已过期\" prop=\"audit_status\">\n                  <FormItemText :modelValue=\"formDetailData_row100.audit_status\"\n                    :options=\"audit_statusOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"审批时间\" prop=\"audit_date\">\n                  <FormItemText :modelValue=\"formDetailData_row100.audit_date\" :options=\"audit_dateOptions\"\n                    label-key=\"label\" value-key=\"id\" node-key=\"id\" parent-key=\"pid\" children-key=\"children\"\n                    errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"审核意见\" prop=\"audit_opinion\">\n                  <FormItemText :modelValue=\"formDetailData_row100.audit_opinion\"\n                    :options=\"audit_opinionOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"过期人\" prop=\"expired_user\">\n                  <FormItemText :modelValue=\"formDetailData_row100.expired_user\"\n                    :options=\"expired_userOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"过期原因\" prop=\"expired_reason\">\n                  <FormItemText :modelValue=\"formDetailData_row100.expired_reason\"\n                    :options=\"expired_reasonOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"过期时间\" prop=\"expired_date\">\n                  <FormItemText :modelValue=\"formDetailData_row100.expired_date\"\n                    :options=\"expired_dateOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"创建人\" prop=\"created_by\">\n                  <FormItemText :modelValue=\"formDetailData_row100.created_by\" :options=\"created_byOptions\"\n                    label-key=\"label\" value-key=\"id\" node-key=\"id\" parent-key=\"pid\" children-key=\"children\"\n                    errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"创建时间\" prop=\"created_date\">\n                  <FormItemText :modelValue=\"formDetailData_row100.created_date\"\n                    :options=\"created_dateOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"更新人\" prop=\"updated_by\">\n                  <FormItemText :modelValue=\"formDetailData_row100.updated_by\" :options=\"updated_byOptions\"\n                    label-key=\"label\" value-key=\"id\" node-key=\"id\" parent-key=\"pid\" children-key=\"children\"\n                    errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n              <el-col :span=\"24\" class=\"readonly \">\n                <el-form-item label=\"更新时间\" prop=\"updated_date\">\n                  <FormItemText :modelValue=\"formDetailData_row100.updated_date\"\n                    :options=\"updated_dateOptions\" label-key=\"label\" value-key=\"id\" node-key=\"id\"\n                    parent-key=\"pid\" children-key=\"children\" errValue=\"（无数据）\" style=\"width:200px;\" />\n                </el-form-item>\n              </el-col>\n            </el-row>\n          </el-col>\n        </el-row>\n      </el-col>\n    </el-form>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    pageParams: {\n      type: Object,\n      default: undefined\n    }\n  },\n  data() {\n    return {\n      formData: {\n        field101: '详情信息',\n        field102: null,\n        id: null,\n        product_id: null,\n        interface_name: null,\n        interface_code: null,\n        media_type: null,\n        request_mode: null,\n        return_type: null,\n        interface_url: null,\n        description: null,\n        audit_user: null,\n        audit_status: null,\n        audit_date: null,\n        audit_opinion: null,\n        expired_user: null,\n        expired_reason: null,\n        expired_date: null,\n        created_by: null,\n        created_date: null,\n        updated_by: null,\n        updated_date: null,\n      },\n      rules: {},\n      optionParams: {\n        \"row100.initData\": {\n          \"sqlId\": \"1251047719744778242\",\n          \"parameters\": {\n            \"id\": \"1274936535720648709\"\n          }\n        }\n      },\n      page: {\n        ...this.getUrlParam(),\n        ...(this.pageParams ? {\n          ...this.pageParams,\n          ...this.pageParams.params,\n        } : {})\n      },\n      formDetailData_row100: {\n        \"id\": null,\n        \"product_id\": null,\n        \"interface_name\": null,\n        \"interface_code\": null,\n        \"media_type\": null,\n        \"request_mode\": null,\n        \"return_type\": null,\n        \"interface_url\": null,\n        \"description\": null,\n        \"audit_user\": null,\n        \"audit_status\": null,\n        \"audit_date\": null,\n        \"audit_opinion\": null,\n        \"expired_user\": null,\n        \"expired_reason\": null,\n        \"expired_date\": null,\n        \"created_by\": null,\n        \"created_date\": null,\n        \"updated_by\": null,\n        \"updated_date\": null\n      },\n      idOptions: [],\n      product_idOptions: [],\n      interface_nameOptions: [],\n      interface_codeOptions: [],\n      media_typeOptions: [],\n      request_modeOptions: [],\n      return_typeOptions: [],\n      interface_urlOptions: [],\n      descriptionOptions: [],\n      audit_userOptions: [],\n      audit_statusOptions: [],\n      audit_dateOptions: [],\n      audit_opinionOptions: [],\n      expired_userOptions: [],\n      expired_reasonOptions: [],\n      expired_dateOptions: [],\n      created_byOptions: [],\n      created_dateOptions: [],\n      updated_byOptions: [],\n      updated_dateOptions: [],\n      \"loadingMap\": {},\n      \"lockPageFieldIdArr\": [],\n      \"row100_dataSource\": {\n        \"type\": \"url\",\n        \"categoryId\": \"1257904396855046146\",\n        \"listId\": \"1251047719744778242\",\n        \"flowId\": null,\n        \"staticData\": \"\",\n        \"microserviceId\": null\n      }\n    }\n  },\n  components: {},\n  computed: {\n    isLockPage() {\n      const {\n        loadingMap = {}, lockPageFieldIdArr = []\n      } = this\n      return !!lockPageFieldIdArr.find(id => {\n        return loadingMap[id] === true\n      })\n    }\n  },\n  watch: {},\n  created() {},\n  mounted() {\n    this.getOptionParams()\n  },\n  methods: {\n    // 其他控件的数据选择事件\n    handlerDataChange(val, comId, callback) {\n      if (this.formData[comId]) {\n        this.formData[comId] = val\n      }\n      //回调函数\n      if (callback) {\n        this[callback](val)\n      }\n      this.getSubComponentsData(val, comId)\n    },\n    /**\n     * 遍历并获取关联的被动控件的数据\n     * @param {Object} val 主动控件触发被动 传递的数据对象\n     * @param {String} comId 主动控件的组件id\n     * TODO: 合并表单、表格和其他控件的获取下级数据的方法\n     */\n    getSubComponentsData(val, comId) {\n      const passiveOptions = this[comId + 'PassiveOptions']\n      if (passiveOptions) {\n        passiveOptions.forEach(option => {\n          if (option.type === 'table') {\n            if (val) {\n              this.tableData(option.id, val)\n            }\n            else {\n              this.formData[option.id] = []\n              this.getSubComponentsData(null, option.id)\n            }\n          }\n          else if (option.type === 'tabContainer') { //选项卡\n            this.addTab(val, option.id)\n          }\n          else if (option.type === 'select') { //下级为select\n            this.formData[option.id] = null\n            if (val) {\n              this.optionParams[option.id + '.initData'].parameters[this[option.id + 'RelatedOptions'][0]\n                .subField] = this.formData[comId]\n              this.getOptionParams(option.id)\n            }\n            else {\n              this.getSubComponentsData(null, option.id)\n            }\n          }\n          else if (option.type === 'formContainer') { //下级为表单\n            this[option.id + 'RelatedOptions'].forEach(item => {\n              this.optionParams.initData.parameters[item.subField] = val[item.mainField]\n            })\n            this.getOptionParams('onlyInitData')\n          }\n          else if (option.type === 'tree') { //下级为树形选择\n            this[option.id + 'RelatedOptions'].forEach(item => {\n              this.optionParams[option.id + '.initData'].parameters[item.subField] = val[item\n                .mainField]\n            })\n            this.getOptionParams(option.id)\n          }\n        })\n      }\n    },\n    // 获取页面 url 参数\n    getUrlParam(name, href) {\n      const paramsObj = this.$tool.getUrlParam(name, href)\n      console.log('getUrlParam paramsObj:', paramsObj)\n      return paramsObj\n    },\n    /**\n     * 获取数据\n     * expamle: getVueData('a.b.c') => this.a.b.c，失败返回 undefined\n     */\n    getVueData(keyStr, obj = this) {\n      if (!keyStr) {\n        console.error('[getVueData() error]no keyStr');\n        return undefined;\n      }\n      try {\n        return keyStr.split('.').reduce(function(o, s) {\n          return o[s];\n        }, obj);\n      }\n      catch (e) {\n        console.error('[getVueData() error]keyStr: ', keyStr);\n        return undefined;\n      }\n    },\n    /** \n     * 在iframe弹窗页面中关闭弹窗\n     * NOTE: 函数名不规范。该方法的作用的关闭弹窗。\n     */\n    doCloseForm() {\n      this.$emit('closeIframeDialog')\n      this.$emit('closeComponentDialog')\n    },\n    // 需要给父页面可编辑的表格中的某一列赋值的保存方法\n    saveFormDataToParent(selectRows, btnOpts, params, tableId, scope) {\n      this.$refs.elForm.validate((valid) => {\n        if (!valid) {\n          console.warn('valid error!!');\n          return false;\n        }\n        if (this.page && this.page.tableId) {\n          let columnValue = '',\n            typeStr = 'form'\n          if (selectRows) {\n            typeStr = 'table'\n            let selectArr = Array.isArray(selectRows) ? selectRows[0] : selectRows\n            Object.keys(selectArr).forEach(key => {\n              if (key === this.page.columnValue) {\n                columnValue = selectRows[key]\n              }\n            })\n          }\n          else {\n            typeStr = 'form'\n            columnValue = this.formData[this.page.columnValue]\n          }\n          this.$emit('editDataSource', {\n            index: this.page.tableIndex,\n            tableId: this.page.tableId,\n            buttonValue: this.page.columnValue, //点击的是哪一列\n            value: columnValue, //点击保存要回传给父页面的数据,\n            type: typeStr //赋值给表格还是赋值给表单\n          })\n        }\n      })\n    },\n    /** \n     * 判断当前页面是否为编辑\n     * 判断规则：初始数据参数有赋值，且数据类型为事务流或有配置编辑数据源\n     * 判断当前页面是否需要初始数据 optionparams中有initData，且页面所有需要的参数都传了并且配置了编辑数据源\n     */\n    judgeIsEdit() {\n      if (!this.optionParams.initData || !this.optionParams.initData.parameters) {\n        console.info('[judgeIsEdit]不存在初始请求参数，页面类型为创建。')\n        return\n      }\n      const initParams = this.optionParams.initData.parameters\n      const formModelKeys = Object.keys(this.formData)\n      const initParamsKeys = Object.keys(initParams)\n      const isEditPage = initParamsKeys.every(key => { //判断、同时赋值\n        let val = initParams[key]\n        if (val && val.toString().match(/^page\\./)) {\n          val = this.getVueData(val) || ''\n        }\n        if (val) { //需要修改页面的初始数据的参数\n          initParams[key] = val //NOTE: 修改了原配置，之后初始值不会再跟随URL参数改变\n          if (formModelKeys.indexOf(key) >= 0) {\n            this.formData[key] = val\n          }\n        }\n        return !!val\n      })\n      console.log('isEditPage', isEditPage, 'editDataId', this.editDataId)\n      this.isEditPage = !!(isEditPage && (this.dataType === 'flow' || this.dataType === 'microservice' || this\n        .editDataId))\n    },\n    //请求页面对应的下拉、多选等选择数据\n    getOptionParams(comId) {\n      if (!this.optionParams) {\n        return false\n      }\n      let keyArr = Object.keys(this.optionParams)\n      // 创建页面不请求 initData\n      if (!this.isEditPage) keyArr = keyArr.filter(key => key !== 'initData')\n      //加入表单作为被动控件的逻辑\n      if (comId === 'onlyInitData') { //仅请求表单的初始数据 \n        keyArr = ['initData']\n      }\n      else if (comId) { //只请求当前项\n        // keyArr=keyArr.filter(key=>key.indexOf('initData')===-1||key===comId+'.initData') //表单控件的写法\n        keyArr = keyArr.filter(key => key === comId + '.initData')\n      }\n      else {\n        // keyArr=keyArr.filter(item=>!this[item.split('.')[0]+'RelatedOptions'])  //过滤掉作为被动控件\n        // 过滤掉的话从表的数据字典数据无法获取，暂时先不过滤\n      }\n      if (keyArr.length === 0) {\n        return false\n      }\n      //将动态参数page.xxx转为页面变量\n      let paramsArr = keyArr.map(key => {\n        const {\n          sqlId,\n          parameters = {}\n        } = this.optionParams[key]\n        const pageParams = {}\n        Object.keys(parameters).forEach(item => {\n          let val = parameters[item]\n          if (val && val.toString().match(/^page\\./)) {\n            pageParams[item] = this.getVueData(val) || ''\n          }\n        })\n        return {\n          sqlId,\n          parameters: {\n            ...parameters,\n            ...pageParams\n          }\n        }\n      })\n      //执行初始所有请求\n      this.$server.allExecuteSqls(paramsArr).then(result => {\n        let searchSelectedTableArr = [] //将搜索条件中含有默认选中项的表格添加到数组中\n        keyArr.forEach((key, index) => {\n          const fieldArr = key.split('.')\n          const mainFieldId = fieldArr[0]\n          const resultArr = result['table_' + index]\n          if (key === 'initData') { //给表单页面控件赋初始值\n            const initObj = resultArr[0]\n            if (!initObj) { //请求到的数据为空\n              this.$refs['elForm'].resetFields()\n              this.assignParams()\n              return false;\n            }\n            this.$nextTick(() => {\n              Object.keys(this.formData).forEach(field => {\n                if (initObj[field] !== undefined && initObj[field] !== null) {\n                  this.formData[field] = initObj[field].toString()\n                }\n              })\n            })\n          }\n          else if (key.indexOf('.initData') > -1) { //其他单个控件请求数据\n            const fieldStr = mainFieldId + 'Options'\n            const formDetailFieldId = 'formDetailData_' + mainFieldId // 表单详情数据\n            if (this[formDetailFieldId]) {\n              this[formDetailFieldId] = resultArr ? resultArr[0] : undefined\n            }\n            else if (this[fieldStr]) {\n              this[fieldStr] = JSON.parse(JSON.stringify(resultArr))\n            }\n            if (this[mainFieldId + 'TreeIsChecked']) { //树形选择 默认勾选\n              this.getDefaultCheckedKeys(resultArr, mainFieldId)\n            }\n            if (!resultArr.length) { //当请求的返回值为空 需要清空联动下级\n              this.getSubComponentsData(null, mainFieldId)\n              return false\n            }\n            // if(fieldArr.length===2){ //其他控件 \n            //TODO：目前需要判断 是否给主动控件加默认数据项  可以考虑在配置项中加个是否默认赋动态值（如默认赋第一项的值）\n            let passiveOptions = this[mainFieldId + 'PassiveOptions']\n            if (passiveOptions) { //有关联下级 才考虑赋初始值\n              let targetData = null\n              if (['select', 'comboTree'].indexOf(passiveOptions[0].selfType) > -\n                1) { //自身为下拉框、树形下拉均没有默认赋动态值\n                this.formData[mainFieldId] = null\n              }\n              else {\n                this.formData[mainFieldId] = this[fieldStr][0] //树形选择、主从表默认值为数组中第一项\n                targetData = this[fieldStr][0]\n              }\n              this.getSubComponentsData(targetData, mainFieldId)\n            }\n          }\n          else { // filter、search\n            const optionArr = resultArr.map(sub => {\n              sub.value = sub.id\n              if (sub.selected && fieldArr[1] != 'filter') { //默认选择的项  过滤没有\n                if (fieldArr.length === 1) { //表单\n                  this.formData[key] = sub.id\n                }\n                else if (fieldArr.length === 3) { //表格\n                  searchSelectedTableArr.push(mainFieldId)\n                  let attrKey = this.formData[mainFieldId + 'Table'][fieldArr[1]][fieldArr[2]]\n                  if (typeof attrKey === 'object') { //如果是多选框 则添加到选中数组中\n                    if (!attrKey.find(id => id === sub.id)) {\n                      attrKey.push(sub.id)\n                    }\n                  }\n                  else {\n                    this.formData[mainFieldId + 'Table'][fieldArr[1]][fieldArr[2]] = sub.id\n                  }\n                }\n              }\n              return sub\n            })\n            if (fieldArr.length === 1) { //表单\n              this[key + 'Options'] = optionArr\n            }\n            else if (fieldArr.length === 3) { //表格\n              this.formData[mainFieldId + 'Table'][fieldArr[1] + 'Options'][fieldArr[2]] = optionArr\n            }\n          }\n        })\n        //考虑表格搜索条件中有默认选中的情况 有则刷新表格数据\n        searchSelectedTableArr.forEach(tableName => {\n          this.tableData(tableName)\n        })\n      })\n    },\n    // 页面自定义脚本\n    // 自动生成事件\n  }\n}\n\n</script>\n<style>\n/* 限制树形下拉组件弹出层的高度 */\n.el-popper .el-tree {\n  max-height: 300px;\n  overflow-y: auto;\n}\n\n</style>\n" }

const result = {
  code: 0,
  data: null,
  message: '保存成功'
}

export default result
